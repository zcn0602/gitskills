properties(
  [parameters(
    [choice(
      choices : [ 'deploy', 'rollback' ], description : '选择升级或者业务回退，回退支持回退至上一个版本。', 
      name : 'step'
    ), 
    [$class : 'ChoiceParameter', 
    choiceType : 'PT_SINGLE_SELECT', 
    description : '请选择升级服务类型', 
    filterLength : 1, 
    filterable : true, 
    name : 'prod', 
    randomName : 'choice-parameter-115098745632263876', 
    script : [$class : 'GroovyScript', 
    fallbackScript : [classpath : [], 
    sandbox : false, 
    script : 'return["error prod"]' ], 
    script : [classpath : [], 
    sandbox : false, 
    script : '[\'bash\', \'-c\', "cat /etc/ansible/.prod/prod.txt |awk \'{print \\$2}\' |uniq |sort"].execute().text.readLines()' ]]], 
    [$class : 'CascadeChoiceParameter', 
    choiceType : 'PT_SINGLE_SELECT', 
    description : '请选择业务名称', 
    filterLength : 1, 
    filterable : false, 
    name : 'type', 
    randomName : 'choice-parameter-115098745636599396', 
    referencedParameters : 'prod', 
    script : [$class : 'GroovyScript', 
    fallbackScript : [classpath : [], 
    sandbox : false, 
    script : 'return["error type"]' ], 
    script : [classpath : [], 
    sandbox : false, 
    script : '''prod=prod
[\'bash\', \'-c\', "cat /etc/ansible/.prod/prod.txt | grep \'$prod \'  |awk \'{print \\$1}\' |uniq"].execute().text.readLines()''' ]]], 
    [$class : 'CascadeChoiceParameter', 
    choiceType : 'PT_SINGLE_SELECT', 
    description : '服务的配置文件目录', 
    filterLength : 1, 
    filterable : false, 
    name : 'config', 
    randomName : 'choice-parameter-115098745640167076', 
    referencedParameters : 'prod', 
    script : [$class : 'GroovyScript', 
    fallbackScript : [classpath : [], 
    sandbox : false, 
    script : '' ], 
    script : [classpath : [], 
    sandbox : false, 
    script : '''prod=prod
[\'bash\', \'-c\', "cat /etc/ansible/.prod/prod.txt | grep  \' $prod \' |awk \'{print \\$3}\' |uniq"].execute().text.readLines()''' ]]], 
    [$class : 'CascadeChoiceParameter', 
    choiceType : 'PT_SINGLE_SELECT', 
    description : '每个选项默认执行备份，若war、conf无改动，则不会重启服务', 
    filterLength : 1, 
    filterable : false, 
    name : 'choice', 
    randomName : 'choice-parameter-115098745644116150', 
    referencedParameters : 'type', 
    script : [$class : 'GroovyScript', 
    fallbackScript : [classpath : [], 
    sandbox : false, 
    script : '' ], 
    script : [classpath : [], 
    sandbox : false, 
    script : '''if(type.equals("tomcat")){
 return ["war","war_conf","conf"]
}
if(type.equals("java")){
 return ["jar","jar_conf","conf"]
}
if(type.equals("spring")){
 return ["jar","jar_conf","conf"]
}
if(type.equals("vhsm")){
 return ["war","war_conf","conf"]
}
if(type.equals("static")){
 return ["replace"]
}''' ]]], 
    string(
      defaultValue : '', description : 'svn地址', 
      name : 'svnUrl'
    ) ]
  ) ]
)

pipeline {
   agent any

   stages {
      stage('Checkout') {
         steps {
             script{
                checkout([$class: 'SubversionSCM',
                additionalCredentials: [],
                excludedCommitMessages: '',
                excludedRegions: '', excludedRevprop: '',
                excludedUsers: '',
                filterChangelog: false,
                ignoreDirPropChanges: false,
                includedRegions: '',
                locations: 
                   [[cancelProcessOnExternalsFail: true,
                   credentialsId: '63d7a7d0-ece6-4134-8ac0-030f2b60c832',
                   depthOption: 'infinity',
                   ignoreExternalsOption: true,
                   local: '.',
                   remote: '$svnUrl']],
               quietOperation: true,
               workspaceUpdater: [$class: 'UpdateUpdater']])
             }
         }
      }
      stage('deploy') {
            when{
                environment name: 'step', value: 'deploy'
                }
            steps{
            dir("/etc/ansible"){
            
            script{
                if (env.type == 'tomcat' && env.prod != 'webrelay') {
                    sh '/usr/bin/ansible-playbook deploy-tomcat.yml --tags "$choice" -e "prod"=$prod -e "config"=$config -e "WORKSPACE"=$WORKSPACE'
                  //sh 'echo -e tomcat $prod '
                  
                }else if (env.prod == 'webrelay'){
                  sh 'echo -e webrelay webrelay'
                  
                }else if (env.type == 'java'){
                  sh '/usr/bin/ansible-playbook deploy-java.yml --tags "$choice" -e "prod"=$prod -e "config"=$config -e "WORKSPACE"=$WORKSPACE'
                  
                }else if (env.type == 'static'){
                  sh 'echo -e else if static' 
                }
            }
            }
        }
      }
   }   

}  
  
